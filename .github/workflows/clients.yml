name: Clients

concurrency:
  group: clients-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

on:
  workflow_call:

jobs:
  client-dotnet:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest, [self-hosted, ARM64, macos-12.6], [self-hosted, ARM64, macos-13.2]]
        dotnet-version: ['3.1.x', '7.0.x']

    runs-on: ${{ matrix.os }}
    permissions:
      # Our M1 runners are self hosted, and not ephemeral like standard GitHub action runners.
      # Limit the token permissions to be read - so even if they were compromised, no damage
      # could be done.
      contents: read
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

      - run: ./scripts/install_zig.${{ matrix.os == 'windows-latest' && 'bat' || 'sh' }}
      - run: ./zig/zig build client_ci -- --language=dotnet
      # - run: ./zig/zig build client_docs -- --language=dotnet
      # - if: matrix.os == 'ubuntu-latest'
        # run: ./.github/ci/fail_on_diff.sh

  client-go:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest, [self-hosted, ARM64, macos-12.6], [self-hosted, ARM64, macos-13.2]]

    runs-on: ${{ matrix.os }}
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v3
      # - uses: actions/setup-go@v4
      #   with:
      #     go-version: '1.17'

      - run: ./scripts/install_zig.${{ matrix.os == 'windows-latest' && 'bat' || 'sh' }}
      - run: ./zig/zig build client_ci -- --language=go
      # - run: ./zig/zig build client_docs -- --language=go
      # - if: matrix.os == 'ubuntu-latest'
        # run: ./.github/ci/fail_on_diff.sh

  client-java:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest, [self-hosted, ARM64, macos-12.6], [self-hosted, ARM64, macos-13.2]]
        java-version: ['11' ]

    runs-on: ${{ matrix.os }}
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java-version }}
          distribution: 'temurin'

      # Maven is pre-installed on GHA runners, but it is **not** installed by `setup-java` action,
      # so it is missing on self-hosted runners. Install manually.
      - run: |
          curl -o maven.zip https://archive.apache.org/dist/maven/maven-3/3.9.3/binaries/apache-maven-3.9.3-bin.zip
          unzip maven.zip
      -  if: matrix.os != 'windows-latest'
         run: echo "$GITHUB_WORKSPACE/apache-maven-3.9.3/bin" >> $GITHUB_PATH
      -  if: matrix.os == 'windows-latest'
         run: '"$env:GITHUB_WORKSPACE/apache-maven-3.9.3/bin" | Out-File -FilePath $env:GITHUB_PATH -Append'

      - run: ./scripts/install_zig.${{ matrix.os == 'windows-latest' && 'bat' || 'sh' }}
      - run: ./zig/zig build client_ci -- --language=java
      # - run: ./zig/zig build client_docs -- --language=java
      # - if: matrix.os == 'ubuntu-latest'
        # run: ./.github/ci/fail_on_diff.sh

  client-node:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest, [self-hosted, ARM64, macos-12.6], [self-hosted, ARM64, macos-13.2]]
        node-version: ['14.x', '18.x']
        exclude:
          - os: [self-hosted, ARM64, macos-12.6]
            node-version: '14.x'
          - os: [self-hosted, ARM64, macos-13.2]
            node-version: '14.x'

    runs-on: ${{ matrix.os }}
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - run: ./scripts/install_zig.${{ matrix.os == 'windows-latest' && 'bat' || 'sh' }}
      - run: ./zig/zig build client_ci -- --language=node
      # - run: ./zig/zig build client_docs -- --language=node
      # - if: matrix.os == 'ubuntu-latest'
        # run: ./.github/ci/fail_on_diff.sh

  clients-pipeline:
    needs:
      - client-dotnet
      - client-go
      - client-java
      - client-node

    runs-on: ubuntu-latest
    steps:
      - name: All Client CI Jobs Passed
        working-directory: ./
        run: exit 0
